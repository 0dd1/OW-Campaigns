var objevovani_zasilek;
var ar_objevovani_zasilek;
export crates;

every 0$0.1 do
begin
     SetResourceVisibility(131, 51, arabians);
     case difficulty of
          1: objevovani_zasilek:=[3,6,4,4,1,4,2,2,3,5,0,2,3,5,1,2,1,2,1,2,1,2];
          2: objevovani_zasilek:=[2,5,3,2,1,3,2,2,3,4,0,2,3,4,0,2,0,2,0,2,0,2];
          3: objevovani_zasilek:=[2,4,2,2,0,3,1,2,3,3,0,2,3,2,0,2,0,2,0,2,0,2];
     end;
     ar_objevovani_zasilek:=[5,6,4,4,2,5,2,4,6,5,2,4,6,5,5,4,5,2,9,8,6,5];
     Randomize;
end;
every 0$10 do
begin
     Randomize;
     enable;
end;

every 15$0 do
begin
     CreateCratesArea(4, other_crates, true);
end;
every 23$0 do
begin
     CreateCratesArea(5, other_crates, true);
end;
every 37$0 do
begin
     CreateCratesArea(5, other_crates, true);
end;
every 47$0 do
begin
     CreateCratesArea(5, other_crates, true);
end;

every 0$5 do
var a, i;
begin
     crates:=[];
     a:=GetListOfCratesInArea(ar_crates_site);
     for i:=1 to (a div 2) do
       crates:=crates ^ [[a[i*2-1],a[i*2]]];
     enable;
end;

// first crate
every 0$1 do
begin
     Wait(Rand(3,7)*0$1);
     CreateCratesArea(2, first_crate, true);
     Wait(Rand(3,7)*0$1);
     CreateCratesArea(2, second_crate, true);
end;
//prvnich 5 minut
every 0$5 do
begin
     objev(objevovani_zasilek, crates_site);
end;
every 0$5 do
begin
     objev(ar_objevovani_zasilek, ar_crates_site);
end;
//kazdych dalsich 5 minut
every 5$0 + 0$5 do
begin
     objev(objevovani_zasilek, crates_site);
     enable;
end;
every 5$0 + 0$5 do
begin
     objev(ar_objevovani_zasilek, ar_crates_site);
     enable;
end;

function objev(zasilky, area);
var x, w, i, hex, cek, cek2, last, min5;
begin
     min5:=(tick div 5$0) + 1;
     cek:=[];
     cek2:=[];
     last:=0;
     x:=zasilky[min5];
     for i:=1 to x do
         cek:=cek ^ Rand(0$15, 5$0);
     cek:=SortListByListAsc(cek, cek);
     for i in cek do begin
         cek2:=cek2 ^ i-last;
         last:=i;
     end;
     for i:=1 to x do begin
         CreateCratesArea(Rand(4,5), area, true);
         Wait(cek2[i]);
     end;
end;